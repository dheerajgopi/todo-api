// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dheerajgopi/todo-api/task (interfaces: Service)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	models "github.com/dheerajgopi/todo-api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Service is a mock of Service interface
type Service struct {
	ctrl     *gomock.Controller
	recorder *ServiceMockRecorder
}

// ServiceMockRecorder is the mock recorder for Service
type ServiceMockRecorder struct {
	mock *Service
}

// NewService creates a new mock instance
func NewService(ctrl *gomock.Controller) *Service {
	mock := &Service{ctrl: ctrl}
	mock.recorder = &ServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Service) EXPECT() *ServiceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *Service) Create(arg0 context.Context, arg1 *models.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *ServiceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*Service)(nil).Create), arg0, arg1)
}
